{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": " - AWS Lambda functions",
  "Parameters": {
    "InfrastructureID": {
      "Description": "Infrastructure ID",
      "Type": "String",
      "AllowedPattern": "[-a-z0-9]+",
      "MaxLength": 50
    },
    "ApplicationID": {
      "Description": "Application ID",
      "Type": "String",
      "AllowedPattern": "[-a-z0-9]+",
      "MaxLength": 50
    },
    "LambdaS3BucketPrefix": {
      "Description": "Lambda S3 bucket prefix",
      "Type": "String"
    },
    "LambdaS3KeyPrefix": {
      "Description": "Lambda S3 key prefix",
      "Type": "String"
    }
  },
  "Mappings" : {
      "RegionMap" : {
        "us-east-1" : { 
          "bucket" : "aws-neptune-customer-samples-us-east-1"
        },
        "us-east-2" : { 
          "bucket" : "aws-neptune-customer-samples-us-east-2"
        },
        "us-west-2" : { 
          "bucket" : "aws-neptune-customer-samples-us-west-2"
        },
        "eu-west-1" : { 
          "bucket" : "aws-neptune-customer-samples-eu-west-1"
        },
        "eu-west-2" : { 
          "bucket" : "aws-neptune-customer-samples-eu-west-2"
        },
        "eu-central-1" : { 
          "bucket" : "aws-neptune-customer-samples-eu-central-1"
        },
        "us-west-1" : { 
          "bucket" : "aws-neptune-customer-samples-us-west-1"
        },
        "ap-southeast-2" : { 
          "bucket" : "aws-neptune-customer-samples-ap-southeast-2"
        },
        "ap-southeast-1" : { 
          "bucket" : "aws-neptune-customer-samples-ap-southeast-1"
        },
        "ap-south-1" : { 
          "bucket" : "aws-neptune-customer-samples-ap-south-1"
        },
        "ap-northeast-1" : { 
          "bucket" : "aws-neptune-customer-samples-ap-northeast-1"
        }
      }
    },
  "Resources": {
    "NeptuneWorkloadLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": {
          "Fn::Join": [
            "-",
            [
              "neptune-workload",
              {
                "Fn::ImportValue": {
                  "Fn::Sub": "${InfrastructureID}-VPC"
                }
              }
            ]
          ]
        },
        "Handler": "neptune_workload.lambda_handler",
        "Role": {
          "Fn::ImportValue": {
            "Fn::Sub": "${InfrastructureID}-NeptuneWorkloadLambdaExecutionRoleARN"
          }
        },
        "Code": {
          "S3Bucket": { 
            "Fn::FindInMap" : [ 
              "RegionMap", 
              { 
                "Ref" : "AWS::Region" 
              }, 
              "bucket"
            ]
          },
          "S3Key": {
            "Fn::Sub": "${LambdaS3KeyPrefix}lambda/neptune-streams/neptune_streams_demo.zip"
          }
        },
        "Environment": {
          "Variables": {
            "NEPTUNE_CLUSTER_ENDPOINT": {
              "Fn::ImportValue": {
                "Fn::Sub": "${ApplicationID}-NeptuneDBClusterEndpoint"
              }
            },
            "BATCH_SIZE": "1000",
            "IS_ACTIVE": "True"
          }
        },
        "MemorySize": 512,
        "Runtime": "python3.8",
        "Timeout": "180",
        "ReservedConcurrentExecutions": 1,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::ImportValue": {
                "Fn::Sub": "${InfrastructureID}-LambdaSecurityGroup"
              }
            },
            {
              "Fn::ImportValue": {
                "Fn::Sub": "${InfrastructureID}-NeptuneAndElastiCacheClientSecurityGroup"
              }
            }
          ],
          "SubnetIds": {
            "Fn::Split": [
              ",",
              {
                "Fn::ImportValue": {
                  "Fn::Sub": "${InfrastructureID}-PrivateSubnetIDs"
                }
              }
            ]
          }
        }
      }
    },
    "NeptuneWorkloadManagerLambda": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": "NeptuneWorkloadLambda",
      "Properties": {
        "FunctionName": {
          "Fn::Join": [
            "-",
            [
              "neptune-workload-manager",
              {
                "Fn::ImportValue": {
                  "Fn::Sub": "${InfrastructureID}-VPC"
                }
              }
            ]
          ]
        },
        "Handler": "neptune_workload_manager.lambda_handler",
        "Role": {
          "Fn::ImportValue": {
            "Fn::Sub": "${InfrastructureID}-NeptuneWorkloadManagerLambdaExecutionRoleARN"
          }
        },
        "Code": {
          "S3Bucket": { 
            "Fn::FindInMap" : [ 
              "RegionMap", 
              { 
                "Ref" : "AWS::Region" 
              }, 
              "bucket"
            ]
          },
          "S3Key": {
            "Fn::Sub": "${LambdaS3KeyPrefix}lambda/neptune-streams/neptune_streams_demo.zip"
          }
        },
        "Environment": {
          "Variables": {
            "WORKLOAD_ARN": {
              "Fn::GetAtt": [
                "NeptuneWorkloadLambda",
                "Arn"
              ]
            }
          }
        },
        "MemorySize": 512,
        "Runtime": "python3.8",
        "Timeout": "15",
        "ReservedConcurrentExecutions": 1
      }
    }
  },
  "Outputs": {
    "NeptuneWorkloadLambdaArn": {
      "Description": "NeptuneWorkloadLambda ARN",
      "Value": {
        "Fn::GetAtt": [
          "NeptuneWorkloadLambda",
          "Arn"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${ApplicationID}-NeptuneWorkloadLambdaArn"
        }
      }
    },
    "NeptuneWorkloadManagerLambdaArn": {
      "Description": "NeptuneWorkloadManagerLambda ARN",
      "Value": {
        "Fn::GetAtt": [
          "NeptuneWorkloadManagerLambda",
          "Arn"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${ApplicationID}-NeptuneWorkloadManagerLambdaArn"
        }
      }
    }
  }
}