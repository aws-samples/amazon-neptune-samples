{
  "Description": "Neptune Gremlin Client demo",
  "Mappings": {
    "RegionMap": {
      "us-east-1": {
        "bucket": "aws-neptune-customer-samples-us-east-1"
      },
      "us-east-2": {
        "bucket": "aws-neptune-customer-samples-us-east-2"
      },
      "us-west-2": {
        "bucket": "aws-neptune-customer-samples-us-west-2"
      },
      "eu-west-1": {
        "bucket": "aws-neptune-customer-samples-eu-west-1"
      },
      "eu-west-2": {
        "bucket": "aws-neptune-customer-samples-eu-west-2"
      },
      "eu-central-1": {
        "bucket": "aws-neptune-customer-samples-eu-central-1"
      },
      "us-west-1": {
        "bucket": "aws-neptune-customer-samples-us-west-1"
      },
      "ap-southeast-2": {
        "bucket": "aws-neptune-customer-samples-ap-southeast-2"
      },
      "ap-southeast-1": {
        "bucket": "aws-neptune-customer-samples-ap-southeast-1"
      },
      "ap-south-1": {
        "bucket": "aws-neptune-customer-samples-ap-south-1"
      },
      "ap-northeast-1": {
        "bucket": "aws-neptune-customer-samples-ap-northeast-1"
      }
    }
  },
  "Resources": {
    "NeptuneBaseStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/aws-neptune-customer-samples/v2/cloudformation-templates/neptune-base-stack.json",
        "Parameters": {
          "Env": "demo",
          "DbInstanceType": "db.r5.large",
          "DBReplicaIdentifierSuffix": "replica1",
          "NeptuneQueryTimeout": "300000",
          "AttachBulkloadIAMRoleToNeptuneCluster": "true"
        },
        "TimeoutInMinutes": "60"
      }
    },
    "SecondNeptuneReplica": {
      "DependsOn": "NeptuneBaseStack",
      "Type": "AWS::Neptune::DBInstance",
      "Properties": {
        "DBInstanceIdentifier": {
          "Fn::Join": [
            "",
            [
              "replica2-",
              {
                "Fn::Sub": "${AWS::StackName}"
              }
            ]
          ]
        },
        "DBClusterIdentifier": {
          "Fn::GetAtt": [
            "NeptuneBaseStack",
            "Outputs.DBClusterId"
          ]
        },
        "DBInstanceClass": "db.r5.large",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "Neptune-demo"
            }
          },
          {
            "Key": "StackId",
            "Value": {
              "Fn::Sub": "${AWS::StackId}"
            }
          },
          {
            "Key": "Stack",
            "Value": {
              "Fn::Sub": "${AWS::Region}-${AWS::StackName}"
            }
          },
          {
            "Key": "Application",
            "Value": "NeptuneCloudformation"
          }
        ]
      }
    },
    "ThirdNeptuneReplica": {
      "DependsOn": "NeptuneBaseStack",
      "Type": "AWS::Neptune::DBInstance",
      "Properties": {
        "DBInstanceIdentifier": {
          "Fn::Join": [
            "",
            [
              "replica3-",
              {
                "Fn::Sub": "${AWS::StackName}"
              }
            ]
          ]
        },
        "DBClusterIdentifier": {
          "Fn::GetAtt": [
            "NeptuneBaseStack",
            "Outputs.DBClusterId"
          ]
        },
        "DBInstanceClass": "db.r5.large",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "Neptune-demo"
            }
          },
          {
            "Key": "StackId",
            "Value": {
              "Fn::Sub": "${AWS::StackId}"
            }
          },
          {
            "Key": "Stack",
            "Value": {
              "Fn::Sub": "${AWS::Region}-${AWS::StackName}"
            }
          },
          {
            "Key": "Application",
            "Value": "NeptuneCloudformation"
          }
        ]
      }
    },
    "NeptuneEnpointsInfoLambdaStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/aws-neptune-customer-samples/neptune-sagemaker/cloudformation-templates/neptune-gremlin-client/neptune-endpoints-info-lambda.json",
        "Parameters": {
          "NeptuneClusterId": {
            "Fn::GetAtt": [
              "NeptuneBaseStack",
              "Outputs.DBClusterId"
            ]
          },
          "Concurrency": 1,
          "S3Bucket": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::FindInMap": [
                    "RegionMap",
                    {
                      "Ref": "AWS::Region"
                    },
                    "bucket"
                  ]
                }
              ]
            ]
          },
          "S3Key": "neptune-sagemaker/lambda/neptune-gremlin-client/neptune-endpoints-info-lambda.jar"
        },
        "TimeoutInMinutes": "60"
      }
    },
    "NeptuneGremlinClientExampleLambdaStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/aws-neptune-customer-samples/neptune-sagemaker/cloudformation-templates/neptune-gremlin-client-demo/neptune-gremlin-client-lambda.json",
        "Parameters": {
          "NeptuneClusterId": {
            "Fn::GetAtt": [
              "NeptuneBaseStack",
              "Outputs.DBClusterId"
            ]
          },
          "VPC": {
            "Fn::GetAtt": [
              "NeptuneBaseStack",
              "Outputs.VPC"
            ]
          },
          "PrivateSubnet1": {
            "Fn::GetAtt": [
              "NeptuneBaseStack",
              "Outputs.PrivateSubnet1"
            ]
          },
          "PrivateSubnet2": {
            "Fn::GetAtt": [
              "NeptuneBaseStack",
              "Outputs.PrivateSubnet2"
            ]
          },
          "NeptuneSecurityGroupId": {
            "Fn::GetAtt": [
              "NeptuneBaseStack",
              "Outputs.NeptuneSG"
            ]
          }
        },
        "TimeoutInMinutes": "60"
      }
    },
    "RDSManagementAPIPolicy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "Description": "Policy for getting cluster and instance details via RDS API",
        "Path": "/",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "rds:DescribeDBClusters",
                "rds:DescribeDBInstances",
                "rds:ListTagsForResource",
                "rds:FailoverDBCluster"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "lambda:InvokeFunction"
              ],
              "Resource": "*"
            }
          ]
        }
      }
    },
    "NeptuneSagemakerNotebook": {
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": [
        "NeptuneBaseStack"
      ],
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.amazonaws.com/aws-neptune-customer-samples/v2/cloudformation-templates/neptune-sagemaker-notebook-stack.json"
            ]
          ]
        },
        "TimeoutInMinutes": "30",
        "Parameters": {
          "Env": "demo",
          "NotebookInstanceType": "ml.t3.large",
          "NeptuneClusterEndpoint": {
            "Fn::GetAtt": [
              "NeptuneBaseStack",
              "Outputs.DBClusterEndpoint"
            ]
          },
          "NeptuneClusterPort": {
            "Fn::GetAtt": [
              "NeptuneBaseStack",
              "Outputs.DBClusterPort"
            ]
          },
          "NeptuneClusterVpc": {
            "Fn::GetAtt": [
              "NeptuneBaseStack",
              "Outputs.VPC"
            ]
          },
          "NeptuneClusterSubnetId": {
            "Fn::GetAtt": [
              "NeptuneBaseStack",
              "Outputs.PublicSubnet1"
            ]
          },
          "NeptuneClientSecurityGroup": "",
          "NeptuneLoadFromS3RoleArn": {
            "Fn::GetAtt": [
              "NeptuneBaseStack",
              "Outputs.NeptuneLoadFromS3IAMRoleArn"
            ]
          },
          "StartupScript": {
            "Fn::Join": [
              "",
              [
                "echo 'export NEPTUNE_CLUSTER_ID=",
                {
                  "Fn::GetAtt": [
                    "NeptuneBaseStack",
                    "Outputs.DBClusterId"
                  ]
                },
                "' >> /home/ec2-user/.bashrc\n",
                "echo 'export PRIMARY_ENDPOINT=",
                {
                  "Fn::GetAtt": [
                    "NeptuneBaseStack",
                    "Outputs.DBInstanceEndpoint"
                  ]
                },
                "' >> /home/ec2-user/.bashrc\n",
                "echo 'export REPLICA_1_ENDPOINT=",
                {
                  "Fn::GetAtt": [
                    "NeptuneBaseStack",
                    "Outputs.DBReplicaInstanceEndpoint"
                  ]
                },
                "' >> /home/ec2-user/.bashrc\n",
                "echo 'export REPLICA_2_ENDPOINT=",
                {
                  "Fn::GetAtt": [
                    "SecondNeptuneReplica",
                    "Endpoint"
                  ]
                },
                "' >> /home/ec2-user/.bashrc\n",
                "echo 'export REPLICA_3_ENDPOINT=",
                {
                  "Fn::GetAtt": [
                    "ThirdNeptuneReplica",
                    "Endpoint"
                  ]
                },
                "' >> /home/ec2-user/.bashrc\n",
                "aws s3 cp s3://",
                {
                  "Fn::FindInMap": [
                    "RegionMap",
                    {
                      "Ref": "AWS::Region"
                    },
                    "bucket"
                  ]
                },
                "/neptune-sagemaker/bin/neptune-python-utils-v2/neptune_python_utils.zip /home/ec2-user/anaconda3/envs/JupyterSystemEnv/lib/python3.7/site-packages/\n",
                "unzip -n /home/ec2-user/anaconda3/envs/JupyterSystemEnv/lib/python3.7/site-packages/neptune_python_utils.zip -d /home/ec2-user/anaconda3/envs/JupyterSystemEnv/lib/python3.7/site-packages/\n",
                "sed -i '$d' /home/ec2-user/anaconda3/envs/JupyterSystemEnv/share/jupyter/kernels/python3/kernel.json\n",
                "sed -i '$d' /home/ec2-user/anaconda3/envs/JupyterSystemEnv/share/jupyter/kernels/python3/kernel.json\n",
                "echo ' \"language\": \"python\",' >> /home/ec2-user/anaconda3/envs/JupyterSystemEnv/share/jupyter/kernels/python3/kernel.json\n",
                "echo ' \"env\": {' >> /home/ec2-user/anaconda3/envs/JupyterSystemEnv/share/jupyter/kernels/python3/kernel.json\n",
                "echo '  \"NEPTUNE_CLUSTER_ENDPOINT\": \"",
                {
                  "Fn::GetAtt": [
                    "NeptuneBaseStack",
                    "Outputs.DBClusterEndpoint"
                  ]
                },
                "\",' >> /home/ec2-user/anaconda3/envs/JupyterSystemEnv/share/jupyter/kernels/python3/kernel.json\n",
                "echo '  \"NEPTUNE_READER_ENDPOINT\": \"",
                {
                  "Fn::GetAtt": [
                    "NeptuneBaseStack",
                    "Outputs.DBClusterEndpoint"
                  ]
                },
                "\",' >> /home/ec2-user/anaconda3/envs/JupyterSystemEnv/share/jupyter/kernels/python3/kernel.json\n",
                "echo '  \"NEPTUNE_CLUSTER_PORT\": \"",
                {
                  "Fn::GetAtt": [
                    "NeptuneBaseStack",
                    "Outputs.DBClusterPort"
                  ]
                },
                "\",' >> /home/ec2-user/anaconda3/envs/JupyterSystemEnv/share/jupyter/kernels/python3/kernel.json\n",
                "echo '  \"NEPTUNE_LOAD_FROM_S3_ROLE_ARN\": \"",
                {
                  "Fn::GetAtt": [
                    "NeptuneBaseStack",
                    "Outputs.NeptuneLoadFromS3IAMRoleArn"
                  ]
                },
                "\",' >> /home/ec2-user/anaconda3/envs/JupyterSystemEnv/share/jupyter/kernels/python3/kernel.json\n",
                "echo '  \"AWS_REGION\": \"",
                {
                  "Ref": "AWS::Region"
                },
                "\",' >> /home/ec2-user/anaconda3/envs/JupyterSystemEnv/share/jupyter/kernels/python3/kernel.json\n",
                "echo '  \"NEPTUNE_CLUSTER_ID\": \"",
                {
                  "Fn::GetAtt": [
                    "NeptuneBaseStack",
                    "Outputs.DBClusterId"
                  ]
                },
                "\",' >> /home/ec2-user/anaconda3/envs/JupyterSystemEnv/share/jupyter/kernels/python3/kernel.json\n",
                "echo '  \"PRIMARY_ENDPOINT\": \"",
                {
                  "Fn::GetAtt": [
                    "NeptuneBaseStack",
                    "Outputs.DBInstanceEndpoint"
                  ]
                },
                "\",' >> /home/ec2-user/anaconda3/envs/JupyterSystemEnv/share/jupyter/kernels/python3/kernel.json\n",
                "echo '  \"REPLICA_1_ENDPOINT\": \"",
                {
                  "Fn::GetAtt": [
                    "NeptuneBaseStack",
                    "Outputs.DBReplicaInstanceEndpoint"
                  ]
                },
                "\",' >> /home/ec2-user/anaconda3/envs/JupyterSystemEnv/share/jupyter/kernels/python3/kernel.json\n",
                "echo '  \"REPLICA_2_ENDPOINT\": \"",
                {
                  "Fn::GetAtt": [
                    "SecondNeptuneReplica",
                    "Endpoint"
                  ]
                },
                "\",' >> /home/ec2-user/anaconda3/envs/JupyterSystemEnv/share/jupyter/kernels/python3/kernel.json\n",
                "echo '  \"REPLICA_3_ENDPOINT\": \"",
                {
                  "Fn::GetAtt": [
                    "ThirdNeptuneReplica",
                    "Endpoint"
                  ]
                },
                "\"' >> /home/ec2-user/anaconda3/envs/JupyterSystemEnv/share/jupyter/kernels/python3/kernel.json\n",
                "echo ' }' >> /home/ec2-user/anaconda3/envs/JupyterSystemEnv/share/jupyter/kernels/python3/kernel.json\n",
                "echo '}' >> /home/ec2-user/anaconda3/envs/JupyterSystemEnv/share/jupyter/kernels/python3/kernel.json\n",
                "aws s3 cp s3://aws-neptune-customer-samples/neptune-sagemaker/notebooks/neptune-gremlin-client-demo/ /home/ec2-user/SageMaker/Neptune/neptune-gremlin-client-demo/ --recursive\n"
              ]
            ]
          },
          "DBClusterId": {
            "Fn::GetAtt": [
              "NeptuneBaseStack",
              "Outputs.DBClusterId"
            ]
          },
          "NeptuneClusterResourceId": {
            "Fn::GetAtt": [
              "NeptuneBaseStack",
              "Outputs.DBClusterResourceId"
            ]
          },
          "EnableIamAuthOnNeptune": "true",
          "CustomPolicyArn": {
            "Ref": "RDSManagementAPIPolicy"
          }
        }
      }
    }
  },
  "Outputs": {
    "SageMakerNotebook": {
      "Value": {
        "Fn::GetAtt": [
          "NeptuneSagemakerNotebook",
          "Outputs.NeptuneSagemakerNotebook"
        ]
      }
    },
    "CloudWatchMetrics": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://console.aws.amazon.com/cloudwatch/home?region=",
            {
              "Ref": "AWS::Region"
            },
            "#metricsV2:graph=~(metrics~(~(~'AWS*2fNeptune~'GremlinRequestsPerSec~'DBInstanceIdentifier~'",
            {
              "Fn::Select": [
                0,
                {
                  "Fn::Split": [
                    ".",
                    {
                      "Fn::GetAtt": [
                        "NeptuneBaseStack",
                        "Outputs.DBInstanceEndpoint"
                      ]
                    }
                  ]
                }
              ]
            },
            ")~(~'...~'",
            {
              "Fn::Select": [
                0,
                {
                  "Fn::Split": [
                    ".",
                    {
                      "Fn::GetAtt": [
                        "NeptuneBaseStack",
                        "Outputs.DBReplicaInstanceEndpoint"
                      ]
                    }
                  ]
                }
              ]
            },
            ")~(~'...~'",
            {
              "Fn::Select": [
                0,
                {
                  "Fn::Split": [
                    ".",
                    {
                      "Fn::GetAtt": [
                        "SecondNeptuneReplica",
                        "Endpoint"
                      ]
                    }
                  ]
                }
              ]
            },
            ")~(~'...~'",
            {
              "Fn::Select": [
                0,
                {
                  "Fn::Split": [
                    ".",
                    {
                      "Fn::GetAtt": [
                        "ThirdNeptuneReplica",
                        "Endpoint"
                      ]
                    }
                  ]
                }
              ]
            },
            "))~view~'timeSeries~stacked~false~region~'",
            {
              "Ref": "AWS::Region"
            },
            "~stat~'Average~period~60~start~'-PT15M~end~'P0D~title~'neptune-gremlin-client);query=~'*7bAWS*2fNeptune*2cDBInstanceIdentifier*7d"
          ]
        ]
      }
    }
  }
}